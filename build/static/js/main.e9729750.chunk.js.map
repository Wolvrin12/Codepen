{"version":3,"sources":["hooks/useLocalStorage.js","components/Editor.jsx","app/App.jsx","index.js"],"names":["useLocalStorage","key","initialValue","prefixedKey","_useState","useState","jsonValue","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","value","setValue","useEffect","setItem","stringify","Editor","_ref","displeyName","language","onChange","open","setOpen","React","createElement","className","concat","type","onClick","prevOpen","FontAwesomeIcon","icon","faCompressAlt","faExpandAlt","ControlledEditor","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","document","getElementById"],"mappings":"mOA0BeA,MAtBf,SAAyBC,EAAKC,GAC5B,IAAMC,EAHO,iBAGgBF,EAE7BG,EAA0BC,oBAAS,WACjC,IAAMC,EAAYC,aAAaC,QAAQL,GACvC,OAAiB,MAAbG,EACKG,KAAKC,MAAMJ,GAEQ,oBAAjBJ,EACFA,IAEAA,KAETS,EAAAC,YAAAR,EAAA,GAVKS,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAgBtB,OAJAI,qBAAU,WACRR,aAAaS,QAAQb,EAAaM,KAAKQ,UAAUJ,MAChD,CAACV,EAAaU,IAEV,CAACA,EAAOC,I,oDCsBFI,MAnCf,SAAeC,GAA8C,IAA3CC,EAAWD,EAAXC,YAAaC,EAAQF,EAARE,SAAUR,EAAKM,EAALN,MAAOS,EAAQH,EAARG,SAC9ClB,EAAwBC,oBAAS,GAAKM,EAAAC,YAAAR,EAAA,GAA/BmB,EAAIZ,EAAA,GAAEa,EAAOb,EAAA,GAMpB,OACEc,IAAAC,cAAA,OAAKC,UAAS,UAAAC,OAAYL,EAAO,GAAK,UACpCE,IAAAC,cAAA,OAAKC,UAAU,gBACZP,EACDK,IAAAC,cAAA,UACEG,KAAK,SACLF,UAAU,aACVG,QAAS,kBAAMN,GAAQ,SAACO,GAAQ,OAAMA,OAEtCN,IAAAC,cAACM,IAAe,CAACC,KAAMV,EAAOW,IAAgBC,QAGlDV,IAAAC,cAACU,aAAgB,CACfC,eAjBN,SAAsBC,EAAQC,EAAM1B,GAClCS,EAAST,IAiBLA,MAAOA,EACPc,UAAU,eACVa,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMtB,EACNuB,MAAO,WACPC,aAAa,O,MCwBRC,MAzDf,WACE,IAAAC,EAAwB/C,EAAgB,OAAQ,IAAGgD,EAAApC,YAAAmC,EAAA,GAA5CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsBnD,EAAgB,MAAO,IAAGoD,EAAAxC,YAAAuC,EAAA,GAAzCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAClBG,EAAoBvD,EAAgB,KAAM,IAAGwD,EAAA5C,YAAA2C,EAAA,GAAtCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAChBpD,EAA4BC,mBAAS,IAAGM,EAAAC,YAAAR,EAAA,GAAjCuD,EAAMhD,EAAA,GAAEiD,EAASjD,EAAA,GAiBxB,OAfAI,qBAAU,WACR,IAAM8C,EAAUC,YAAW,WACzBF,EAAU,qCAADhC,OAEGqB,EAAI,8BAAArB,OACHyB,EAAG,gCAAAzB,OACF6B,EAAE,0CAGf,KACH,OAAO,WACLM,aAAaF,MAEd,CAACZ,EAAMI,EAAKI,IAGbhC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAACR,EAAM,CACLG,SAAS,MACTD,YAAY,OACZP,MAAOoC,EACP3B,SAAU4B,IAEZzB,IAAAC,cAACR,EAAM,CACLG,SAAS,MACTD,YAAY,MACZP,MAAOwC,EACP/B,SAAUgC,IAEZ7B,IAAAC,cAACR,EAAM,CACLG,SAAS,aACTD,YAAY,KACZP,MAAO4C,EACPnC,SAAUoC,KAGdjC,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UACEiC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,Y,MClDjBC,IAASC,OAAO7C,IAAAC,cAACoB,EAAG,MAAKyB,SAASC,eAAe,W","file":"static/js/main.e9729750.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"codepen-clone-\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key;\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey);\r\n    if (jsonValue != null) {\r\n      return JSON.parse(jsonValue);\r\n    }\r\n    if (typeof initialValue === \"function\") {\r\n      return initialValue();\r\n    } else {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n  }, [prefixedKey, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from \"react\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/css/css\";\r\n\r\nfunction Editor({ displeyName, language, value, onChange }) {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <div className={`editor ${open ? \"\" : \"close\"}`}>\r\n      <div className=\"editor_title\">\r\n        {displeyName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"editor_btn\"\r\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"editor_place\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React, { useEffect, useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport Editor from \"../components/Editor\";\nimport \"../styles/App.css\";\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage(\"html\", \"\");\n  const [css, setCss] = useLocalStorage(\"css\", \"\");\n  const [js, setJs] = useLocalStorage(\"js\", \"\");\n  const [srcDoc, setSrcDoc] = useState(\"\");\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n    }, 250);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [html, css, js]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_pens pen\">\n        <Editor\n          language=\"xml\"\n          displeyName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"css\"\n          displeyName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displeyName=\"JS\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"app_results pen\">\n        <iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App.jsx\";\nimport \"./styles/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}